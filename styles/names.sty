\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{genealogy}[2024/09/27 Genealogy package for handling names with unique IDs]

\RequirePackage{xparse}
\RequirePackage{expl3}
\RequirePackage{xstring}

\ExplSyntaxOn

% Define a sequence to store the data for each individual
\seq_new:N \l_genealogy_individuals_seq

% Define keys for the data stored for each individual in the l_genealogy_individuals_seq sequence
\keys_define:nn { genealogy } {
    uniqueid .code:n = { \tl_set:Nn \l_uniqueid_tl { #1 } },
    surname .code:n = { \tl_set:Nn \l_surname_tl { #1 } },
    firstname .code:n = { \tl_set:Nn \l_firstname_tl { #1 } },
    allnames .code:n = { \tl_set:Nn \l_allnames_tl { #1 } },
    initials .code:n = { \tl_set:Nn \l_initials_tl { #1 } },
}

% Define a command to extract the initials of a full names
\cs_new:Npn \extract_initials:n #1 {
    \seq_set_split:Nnn \l_tmpa_seq { ~ } { #1 } % Split the full name by spaces
    \seq_map_inline:Nn \l_tmpa_seq {
        \tl_head:n { ##1 } .~ % Extract the first character of each word and append a period
    }
}

% Define individual using a unique ID, surname, first name, and full names
\NewDocumentCommand{\newindividual}{m m m m}{
    \seq_put_right:Nn \l_genealogy_individuals_seq {
        uniqueid={#1},surname={#2},firstname={#3},allnames={#4},
        initials={\extract_initials:n{#4}}
    }

    \expandafter\newcommand\csname #1Name\endcsname{{#3\space#2}}
    \expandafter\newcommand\csname #1Full\endcsname{{#4\space#2}}
    \expandafter\newcommand\csname #1Firstname\endcsname{{#3}}
    \expandafter\newcommand\csname #1Surname\endcsname{{#2}}
    \expandafter\newcommand\csname #1Aka\endcsname{{#4\space#2}~(aka~#3)}
    \expandafter\newcommand\csname #1Initials\endcsname{\extract_initials:n{#4}~#2}
}

% Define a command to extract the first name of an individual using their unique ID
\NewDocumentCommand{\firstname}{m}{
    \seq_map_inline:Nn \l_genealogy_individuals_seq {
        \keys_set:nn { genealogy } { ##1 }
        \str_if_eq:VnT \l_uniqueid_tl { #1 }{\l_firstname_tl}
    }
}

% Define a command to extract the surname of an individual using their unique ID
\NewDocumentCommand{\surname}{m}{
    \seq_map_inline:Nn \l_genealogy_individuals_seq {
        \keys_set:nn { genealogy } { ##1 }
        \str_if_eq:VnT \l_uniqueid_tl { #1 }{\l_surname_tl}
    }
}

% Define a command to extract the full names of an individual using their unique ID
\NewDocumentCommand{\fullnames}{m}{
    \seq_map_inline:Nn \l_genealogy_individuals_seq {
        \keys_set:nn { genealogy } { ##1 }
        \str_if_eq:VnT \l_uniqueid_tl { #1 }{\l_allnames_tl}
    }
}

% Define a command to extract the initials of an individual using their unique ID
\NewDocumentCommand{\initials}{m}{
    \seq_map_inline:Nn \l_genealogy_individuals_seq {
        \keys_set:nn { genealogy } { ##1 }
        \str_if_eq:VnT \l_uniqueid_tl { #1 }{\l_initials_tl}
    }
}

% Define a command to marry two individuals, by providing and new unique ID for the married bride, the unige ID of the bride and the unique ID of the groom. This will create new commands for the married bride, including their full name, first name, surname, initials, aka, and née name and née full name.
\NewDocumentCommand{\marry}{m m m}{

    \exp_args:Nc \NewDocumentCommand{#1Name}{}{
        \firstname{#2}~\surname{#3}
    }

    \exp_args:Nc \NewDocumentCommand{#1Full}{}{
        \fullnames{#2}~\surname{#3}
    }

    \exp_args:Nc \NewDocumentCommand{#1Firstname}{}{
        \firstname{#2}
    }

    \exp_args:Nc \NewDocumentCommand{#1Surname}{}{
        \surname{#2}
    }

    \exp_args:Nc \NewDocumentCommand{#1Aka}{}{
        \fullnames{#2}~\surname{#3}~(aka~\firstname{#2})
    }

    \exp_args:Nc \NewDocumentCommand{#1Initials}{}{
        \initials{#2}~\surname{#3}
    }

    \exp_args:Nc \NewDocumentCommand{#1Namenee}{}{
        \firstname{#2}~\surname{#3}~(née~\surname{#2})
    }

    \exp_args:Nc \NewDocumentCommand{#1Fullnee}{}{
        \fullnames{#2}~\surname{#3}~(née~\surname{#2})
    }
}

\ExplSyntaxOff
